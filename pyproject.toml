[build-system]
requires = ["setuptools>=59.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
addopts = "--cov=gs --cov=obc/tools -v"
testpaths = ["python_test"]

[tool.mypy]
exclude = [
  "libs/*",
  "cmake/*",
  "build*",
  "python_test/*",
  "test/*"]
mypy_path = "gs:obc/tools"
strict = true # Should be good to start off with

#[tool.isort]
#profile = "black"
#py_version = 310
#extend_skip_glob = [
#"build*",
#"libs/*",
#"cmake/*",
#"test/*"]
#skip_gitignore = true
#line_length = 160 # Same as flake8

[tool.ruff]
include = ["pyproject.toml", "gs/**/*.py", "obc/tools/**/*.py"]
target-version = "py310"

# Same as Black.
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # pep8-naming
    "N",
    # flake8-annotations
    "ANN",
    # flake8 builtin shadowing
    "A",
]
fixable = ["ALL"]
unfixable = []
ignore = ["ANN101", "ANN102"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

"""
init

Revision ID: eb50ffe96509
Revises:
Create Date: 2025-09-29 03:29:58.185076

"""
import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision = "eb50ffe96509"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    """
    Apply the database schema changes for this migration
    This function creates all necessary tables, indices, and constraints
    as defined for the initial migration of the project.
    """
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_tokens",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("user_data_id", sa.Uuid(), nullable=False),
        sa.Column("token", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("expiry", sa.DateTime(), nullable=False),
        sa.Column("auth_type", sa.Enum("DUMMY", "ANOTHERDUMMY", "TEST", name="auth_type"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="aro_users",
    )
    op.create_index(op.f("ix_aro_users_auth_tokens_id"), "auth_tokens", ["id"], unique=False, schema="aro_users")
    op.create_table(
        "user_login",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("password", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
        sa.Column("salt", sa.LargeBinary(), nullable=False),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("hashing_algorithm_name", sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
        sa.Column("user_data_id", sa.Uuid(), nullable=False),
        sa.Column("email_verification_token", sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        schema="aro_users",
    )
    op.create_index(op.f("ix_aro_users_user_login_id"), "user_login", ["id"], unique=False, schema="aro_users")
    op.create_table(
        "users_data",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("call_sign", sqlmodel.sql.sqltypes.AutoString(length=6), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
        sa.Column("phone_number", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        schema="aro_users",
    )
    op.create_index(op.f("ix_aro_users_users_data_id"), "users_data", ["id"], unique=False, schema="aro_users")
    op.create_table(
        "commands",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("params", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("format", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("data_size", sa.Integer(), nullable=False),
        sa.Column("total_size", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="main",
    )
    op.create_index(op.f("ix_main_commands_id"), "commands", ["id"], unique=False, schema="main")
    op.create_table(
        "telemetry",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("format", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("data_size", sa.Integer(), nullable=False),
        sa.Column("total_size", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="main",
    )
    op.create_index(op.f("ix_main_telemetry_id"), "telemetry", ["id"], unique=False, schema="main")
    op.create_table(
        "comms_session",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("start_time", sa.DateTime(), nullable=False),
        sa.Column("end_time", sa.DateTime(), nullable=True),
        sa.Column(
            "status", sa.Enum("PENDING", "SCHEDULED", "ONGOING", "COMPLETED", name="sessionstatus"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("end_time"),
        sa.UniqueConstraint("start_time"),
        schema="transactional",
    )
    op.create_index(
        op.f("ix_transactional_comms_session_id"), "comms_session", ["id"], unique=False, schema="transactional"
    )
    op.create_table(
        "commands",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("PENDING", "SCHEDULED", "SENT", "CANCELLED", "FAILED", "COMPLETED", name="commandstatus"),
            nullable=False,
        ),
        sa.Column("type_", sa.Integer(), nullable=False),
        sa.Column("params", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(["type_"], ["main.commands.id"], onupdate="CASCADE", ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="transactional",
    )
    op.create_index(op.f("ix_transactional_commands_id"), "commands", ["id"], unique=False, schema="transactional")
    op.create_table(
        "packet",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("session_id", sa.Uuid(), nullable=False),
        sa.Column("raw_data", sa.LargeBinary(), nullable=False),
        sa.Column("type_", sa.Enum("UPLINK", "DOWNLINK", name="mainpackettype"), nullable=False),
        sa.Column("payload_data", sa.LargeBinary(), nullable=False),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("offset", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["session_id"], ["transactional.comms_session.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="transactional",
    )
    op.create_index(op.f("ix_transactional_packet_id"), "packet", ["id"], unique=False, schema="transactional")
    op.create_table(
        "telemetry",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("type_", sa.Integer(), nullable=False),
        sa.Column("value", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(["type_"], ["main.telemetry.id"], onupdate="CASCADE", ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="transactional",
    )
    op.create_index(op.f("ix_transactional_telemetry_id"), "telemetry", ["id"], unique=False, schema="transactional")
    op.create_table(
        "packet_commands",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("packet_id", sa.Uuid(), nullable=False),
        sa.Column("command_id", sa.Uuid(), nullable=False),
        sa.Column("previous", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(["command_id"], ["transactional.commands.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["packet_id"], ["transactional.packet.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["previous"], ["transactional.commands.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="transactional",
    )
    op.create_index(
        op.f("ix_transactional_packet_commands_id"), "packet_commands", ["id"], unique=False, schema="transactional"
    )
    op.create_table(
        "packet_telemetry",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("packet_id", sa.Uuid(), nullable=False),
        sa.Column("telemetry_id", sa.Uuid(), nullable=False),
        sa.Column("previous", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(["packet_id"], ["transactional.packet.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["previous"], ["transactional.telemetry.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["telemetry_id"], ["transactional.telemetry.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="transactional",
    )
    op.create_index(
        op.f("ix_transactional_packet_telemetry_id"), "packet_telemetry", ["id"], unique=False, schema="transactional"
    )
    op.create_table(
        "aro_requests",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("aro_id", sa.Uuid(), nullable=False),
        sa.Column("latitude", sa.Numeric(precision=5, scale=3), nullable=False),
        sa.Column("longitude", sa.Numeric(precision=6, scale=3), nullable=False),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("request_sent_to_obc_on", sa.DateTime(), nullable=True),
        sa.Column("pic_taken_on", sa.DateTime(), nullable=True),
        sa.Column("pic_transmitted_on", sa.DateTime(), nullable=True),
        sa.Column("packet_id", sa.Uuid(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("PENDING", "SCHEDULED", "ONGOING", "CANCELLED", "FAILED", "COMPLETED", name="arorequeststatus"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["aro_id"], ["aro_users.users_data.id"], onupdate="CASCADE", ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["packet_id"], ["transactional.packet_commands.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        schema="transactional",
    )
    op.create_index(
        op.f("ix_transactional_aro_requests_id"), "aro_requests", ["id"], unique=False, schema="transactional"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """
    Reverts the database schema changes made by this migration.
    This function drops all tables, indices, and constraints created in the upgrade.
    """
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_transactional_aro_requests_id"), table_name="aro_requests", schema="transactional")
    op.drop_table("aro_requests", schema="transactional")
    op.drop_index(op.f("ix_transactional_packet_telemetry_id"), table_name="packet_telemetry", schema="transactional")
    op.drop_table("packet_telemetry", schema="transactional")
    op.drop_index(op.f("ix_transactional_packet_commands_id"), table_name="packet_commands", schema="transactional")
    op.drop_table("packet_commands", schema="transactional")
    op.drop_index(op.f("ix_transactional_telemetry_id"), table_name="telemetry", schema="transactional")
    op.drop_table("telemetry", schema="transactional")
    op.drop_index(op.f("ix_transactional_packet_id"), table_name="packet", schema="transactional")
    op.drop_table("packet", schema="transactional")
    op.drop_index(op.f("ix_transactional_commands_id"), table_name="commands", schema="transactional")
    op.drop_table("commands", schema="transactional")
    op.drop_index(op.f("ix_transactional_comms_session_id"), table_name="comms_session", schema="transactional")
    op.drop_table("comms_session", schema="transactional")
    op.drop_index(op.f("ix_main_telemetry_id"), table_name="telemetry", schema="main")
    op.drop_table("telemetry", schema="main")
    op.drop_index(op.f("ix_main_commands_id"), table_name="commands", schema="main")
    op.drop_table("commands", schema="main")
    op.drop_index(op.f("ix_aro_users_users_data_id"), table_name="users_data", schema="aro_users")
    op.drop_table("users_data", schema="aro_users")
    op.drop_index(op.f("ix_aro_users_user_login_id"), table_name="user_login", schema="aro_users")
    op.drop_table("user_login", schema="aro_users")
    op.drop_index(op.f("ix_aro_users_auth_tokens_id"), table_name="auth_tokens", schema="aro_users")
    op.drop_table("auth_tokens", schema="aro_users")
    # ### end Alembic commands ###
